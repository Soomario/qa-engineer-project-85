- summary: |
    Проверка регистрации с помощью Discord
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте с помощью учетной записи Discord
  prerequisites: |
    Пользователь должен иметь учетную запись Discord
  test-data: |
    Адрес электронной почты, имя пользователя.
  steps:
    - Нажмите кнопку "Зарегистрироваться" на главной странице сайта
    - Выберите "Регистрация с помощью Discord"
    - Введите адрес электронной почты и имя пользователя в форму регистрации
    - Нажмите "Отправить"
    - в свой аккаунт Discord, чтобы завершить регистрацию
  expected-result: |
    - Пользователь должен быть зарегистрирован на сайте с помощью учетной записи Discord
    - Имя пользователя и аватар Discord должны отображаться на сайте

- summary: |
    Проверка регистрации с помощью GitHub
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте с помощью учетной записи GitHub
  prerequisites: |
    Пользователь должен иметь учетную запись GitHub
  test-data: |
    Адрес электронной почты, имя пользователя, аватар
  steps:
    - Нажмите кнопку "Зарегистрироваться" на главной странице сайта
    - Выберите "Регистрация с помощью GitHub"
    - Введите адрес электронной почты и имя пользователя в форму регистрации
    - Нажмите "Отправить"
    - Войдите в свой аккаунт GitHub, чтобы завершить регистрацию
expected-result: |
    - Пользователь должен быть зарегистрирован на сайте с помощью учетной записи GitHub
    - Имя пользователя и аватар GitHub должны отображаться на сайте

- summary: |
    Проверка возможности регистрации нового пользователя
  requirement: |
    При заполнении корректных данных и нажатии кнопки "Зарегистрироваться" пользователь должен успешно зарегистрироваться в системе
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Имя пользователя = Som
    Адрес электронной почты = Som@gmail.com
    Пароль = mypassword
  steps:
    - Вводим имя пользователя
    - Вводим адрес электронной почты
    - Вводим пароль
    - Подтверждаем пароль
    - Нажимаем кнопку "Зарегистрироваться"
  expected-result: |
    - Пользователь должен попасть на главную страницу, и в его профиле должны быть указаны введенные данные.

- summary: |
    Проверка входа пользователя с несуществующими логином и паролем
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites: |
    Открыта страница логина
  test-data: |
    Логин = Логин = Sont Пароль = 123321
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку "Войти"
  expected-result: |
    Пользователю должно выдать ошибку, что такой почты нет.

- summary: |
    Проверка возможности изменения имени пользователя
  requirement: |
    При вводе нового имени пользователя и нажатии кнопки "Сохранить" имя пользователя должно измениться
  prerequisites: |
    Пользователь должен быть зарегистрирован и авторизован в системе
  test-data: |
    Новое имя пользователя = Somik
  steps:
    - Нажимаем кнопку "Настройки"
    - В поле "Ваше имя" вводим новое имя пользователя
    - Нажимаем кнопку "Сохранить"
  expected-result: |
    - Имя пользователя в профиле должно измениться на новое имя.

- summary: |
    Проверка возможности создания нового турнира
  requirement: |
    При заполнении всех полей и нажатии кнопки "Создать" новый турнир должен быть успешно создан
  prerequisites: |
    Пользователь должен быть зарегистрирован и авторизован в системе
  test-data: |
    Название турнира = My First Tournament
    Ограничение на количество игроков = 32
    Начало турнира (в формате UTC) = 2023-04-10T12:00:00
    Стратегия заданий = Случайный выбор
    Провайдер заданий = Level
    Уровень заданий = Средний
    Язык программирования по умолчанию = Python
    Таймаут матча в минутах = 60
  steps:
    - Нажимаем кнопку "Турниры"
    - Нажимаем кнопку "Создать новый турнир"
    - Вводим название турнира
    - Вводим ограничение на количество игроков
    - Вводим начало турнира
    - Выбираем стратегию заданий
    - Выбираем провайдера задачи
    - Выбираем уровень задачи
    - Выбираем язык по умолчанию
    - Вводим таймаут матча в секундах
    - Нажимаем кнопку «Создать»
  expected-result: |
    - Турнир должен быть создан и отображаться на странице турниров, соответствующие параметры должны быть сохранены

- summary: |
    Проверка сохранения настроек профиля пользователя
  requirement: |
    Пользователь должен иметь возможность сохранить выбранный язык программирования, уровень звука и другие настройки профиля
  prerequisites:
    Пользователь авторизован и перешел в раздел "Settings"
  test-data: |
    Язык программирования = Python, звука = Dendy
  steps:
    - Выбираем язык программирования Python из списка
    - Выбираем уровень звука Dendy
    - Нажимаем кнопку "Save"
  expected-result: |
    - Настройки профиля должны быть сохранены, пользователь должен видеть уведомление об успешном сохранении

- summary: |
    Проверка просмотра задачи
  requirement: |
    Пользователь должен иметь возможность просмотреть описание и условия задачи
  prerequisites:
    Пользователь авторизован и перешел в раздел "Tasks"
  test-data: |
    Выбрана задача "Определение четности числа"
  steps:
    - Нажимаем кнопку "Show" рядом с выбранной задачей
  expected-result: |
    - Пользователь должен увидеть полное описание задачи, ее условия и примеры входных и выходных данных

- summary: |
    Проверка выбора языка программирования в настройках
  requirement: |
    Пользователь должен иметь возможность выбрать язык программирования в настройках
  prerequisites:
    Пользователь залогинен в аккаунт
  test-data: |
    Язык программирования = Python
  steps:
    - Нажимаем кнопку "Настройки"
    - Выбираем "Python" в разделе "Ваше оружие"
    - Нажимаем "Сохранить"
  expected-result: |
    - Язык программирования пользователя должен измениться на Python

- summary: |
    Проверка сортировки пользователей по рейтингу в "User Rating"
  requirement: |
    Пользователи должны быть отсортированы по рейтингу в разделе "User Rating"
  prerequisites:
    Пользователь залогинен в аккаунт
  test-data: |
    Рейтинг отображен на странице
  steps:
    - Нажимаем на раздел "User Rating"
    - Выбираем сортировку по рейтингу
    - Нажимаем кнопку "Total"
  expected-result: |
    - Пользователи должны быть отсортированы по рейтингу в порядке убывания

- summary: |
    Проверка выбора языка игры и отображения задачи на выбранном языке
  requirement: |
    Пользователь должен иметь возможность выбрать язык игры и отображения задачи на выбранном языке
  prerequisites: |
    Пользователь должен быть авторизован, находиться в игре
  test-data: |
    Язык игры = Русский
  steps:
    - Нажимаем кнопку "Show guide"
    - Выбираем язык игры
    - Просматриваем задачу
  expected-result: |
    - Задача должна быть отображена на выбранном языке

- summary: |
    Проверка кнопок "Reset editor" и "Check solution" во время игры
  requirement: |
    Пользователь должен иметь возможность использовать кнопки "Reset editor" и "Check solution" во время игры
  prerequisites: |
    Пользователь должен быть авторизован, находиться в игре
  test-data: |
    Наличие кода в редакторе, Ожидаемый результат после проверки решения
  steps:
    - Начинаем игру
    - Пишем код в редакторе
    - Нажимаем кнопку "Check solution"
    - Просматриваем ожидаемый результат после проверки решения
    - Нажимаем кнопку "Reset editor"
  expected-result: |
    - Пользователь должен иметь возможность использовать кнопки "Reset editor" и "Check solution" во время игры, ожидаемый результат после проверки решения должен быть корректным

- summary: |
    Проверка отображения сайта в последней версии
  requirement: |
    Сайт корректно отображается на разных страницах в последней версии Chrome
  prerequisites: |
    Открыта последняя версия браузера Crome
  test-data: |
    Crome Lattest 109
  steps: 
    - Открываем браузер Crome
    - Вводим в адресную строку https://codebattle.hexlet.io/
    - жмем "Enter"
    - Просматриваем различные страницы сайта
  expected-result: |
    - Успешно зашли на сайт 
    - Сайт отоброжается

- summary: |
    Проверка отображения сайта в последней версии Firefox
  requirement: |
    Сайт корректно отображается на разных страницах в последней версии Firefox
  prerequisites: |
    Открыта последняя версия браузера Firefox
  test-data: |
    Firefox Latest 98
  steps:
    - Открываем браузер Firefox
    - Вводим в адресную строку https://codebattle.hexlet.io/
    - жмем "Enter"
    - Просматриваем различные страницы сайта
  expected-result: |
    - Успешно зашли на сайт
    - Сайт отображается корректно.
    
- summary: |
    Проверка отображения сайта в последней версии
  requirement: |
    Сайт корректно отображается на разных страницах в последней версии Opera
  prerequisites: |
    Открыта последняя версия браузера Opera
  test-data: |
    Opera Latest 88
  steps:
    - Открываем браузер Opera
    - Вводим в адресную строку https://codebattle.hexlet.io/
    - жмем "Enter"
    - Просматриваем различные страницы сайта
  expected-result: |
    - Успешно зашли на сайт
    - Сайт отоброжается
    
- summary: |
    Проверка завершения игры путем сдачи задания
  requirement: |
    Пользователь должен иметь возможность завершить игру, когда он успешно решит задание
  prerequisites: |
    Пользователь должен быть авторизован, игра должна быть запущена
  test-data: |
    Решение задания
  steps:
    - Написать решение задания в редакторе
    - Нажать кнопку "Check solution"
    - Просмотреть результаты проверки решения
    - Если решение правильное, нажать кнопку "Finish game"
  expected-result: |
    - Пользователь должен получить результаты игры, которые должны отображать количество заработанных очков и не пройденное задание.

- summary: |
    Проверка завершения игры путем выхода из нее
  requirement: |
    Пользователь должен иметь возможность завершить игру, когда он покинет страницу игры
  prerequisites: |
    Пользователь должен быть авторизован, игра должна быть запущена
  test-data: |
    Нет
  steps:
    - Нажать кнопку "Leave game"
    - Подтвердить действие, если появится соответствующий запрос
  expected-result: |
    - Пользователь должен получить результаты игры, которые должны отображать количество заработанных очков и не пройденное задание.
    
- summary: |
    Проверка завершения игры путем Победы
  requirement: |
    Пользователь должен победить
  prerequisites: |
    Пользователь должен быть авторизован, игра должна быть запущена
  test-data: |
    Нет
  steps:
    - Нажать кнопку "Leave game"
    - Подтвердить действие, если появится соответствующий запрос
  expected-result: |
    - Пользователь должен получить результаты игры, которые должны отображать количество заработанных очков и не пройденное задание.
    
- summary: |
    Проверка завершения игры путем выхода из нее после победы
  requirement: |
    Пользователь должен иметь возможность завершить игру, когда он покинет страницу игры после победы
  prerequisites: |
    Пользователь должен быть авторизован, игра должна быть запущена, задание должно быть успешно выполнено
  test-data: |
    Нет
  steps:
    - Выполнить задание успешно
    - Нажать кнопку "Leave game"
    - Подтвердить действие, если появится соответствующий запрос
  expected-result: |
    - Пользователь должен получить результаты игры, которые должны отображать количество заработанных очков и успешно выполненное задание.
    
- summary: |
    Проверка завершения игры путем выхода из нее после проигрыша
  requirement: |
    Пользователь должен иметь возможность завершить игру, когда он покинет страницу игры после проигрыша
  prerequisites: |
    Пользователь должен быть авторизован, игра должна быть запущена, задание должно быть не выполнено
  test-data: |
    Нет
  steps:
    - Покинуть задание не выполненным
    - Нажать кнопку "Leave game"
    - Подтвердить действие, если появится соответствующий запрос
  expected-result: |
    - Пользователь должен получить результат игры, которые должны отображать количество заработанных очков и не пройденное задание.

- summary: |
    Проверка возможности оставить сообщение о баге
  requirement: |
    Пользователь должен иметь возможность отправить сообщение о баге через кнопку Send Feedback
  prerequisites: |
     Пользователь должен быть авторизован, на странице должно быть открыто окно Send Feedback
  test-data: |
    Тема сообщения: Баг на странице "О нас"
    Текст сообщения: "Некоторые элементы на странице "О нас" не отображаются правильно"
  steps:
    - Нажать кнопку Send Feedback
    - Выбрать "Bug" в качестве типа сообщения
    - Заполнить форму с темой и текстом сообщения
    - Нажать кнопку "Send"
expected-result: |
    - Сообщение успешно отправлено
    - Администратор получит уведомление о баге на странице "О нас"

- summary: |
    Проверка возможности оставить сообщение об улучшении
  requirement: |
    Пользователь должен иметь возможность отправить сообщение об улучшении через кнопку Send Feedback
  prerequisites: |
     Пользователь должен быть авторизован, на странице должно быть открыто окно Send Feedback
  test-data: |
    Тема сообщения: Улучшение интерфейса
    Текст сообщения: "Хотелось бы видеть больше анимации на сайте"
  steps:
    - Нажать кнопку Send Feedback
    - Выбрать "Improvement" в качестве типа сообщения
    - Заполнить форму с темой и текстом сообщения
    - Нажать кнопку "Send"
  expected-result: |
    - Сообщение успешно отправлено
    - Администратор получит уведомление о желании улучшить интерфейс сайта

- summary: |
    Проверка возможности оставить сообщение о новой функции
  requirement: |
    Пользователь должен иметь возможность отправить сообщение о новой функции через кнопку Send Feedback
  prerequisites: |
    Пользователь должен быть авторизован, на странице должно быть открыто окно Send Feedback
  test-data: |
    Тема сообщения: Новая функция: добавление возможности изменять цветовую схему
    Текст сообщения: "Хотелось бы иметь возможность изменять цветовую схему сайта, чтобы можно было настроить его под свой вкус"
  steps:
    - Нажать кнопку Send Feedback
    - Выбрать "Feature" в качестве типа сообщения
    - Заполнить форму с темой и текстом сообщения
    - Нажать кнопку "Send Feedback"
  expected-result: |
    - Пользователь должен увидеть сообщение об успешной отправке сообщения
    - Сообщение должно появиться в системе обратной связи
    
    
    
    
